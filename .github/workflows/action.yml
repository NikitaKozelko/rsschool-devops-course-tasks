name: Terraform Action

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AWS_REGION: eu-central-1

jobs:
  terraform-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        # with:
        #   terraform_version: ${{ env.TF_VERSION }}

      - name: Format check with terraform fmt
        run: terraform fmt -check
        continue-on-error: true  # Allow the workflow to proceed even if format check fails

  # Step 2: Terraform Plan (terraform plan)
  terraform-plan:
    runs-on: ubuntu-latest
    needs: terraform-check  # Runs after terraform-check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        # with:
        #   terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials for Terraform
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::952257814712:role/GithubActionsRole  # Replace with your role ARN
          aws-region: ${{ env.AWS_REGION }}

      - name: Initialize Terraform
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

  # Step 3: Terraform Apply (terraform apply)
  terraform-apply:
    runs-on: ubuntu-latest
    needs: terraform-plan  # Runs after terraform-plan
    # if: github.event_name == 'push' && github.ref == 'refs/heads/main'  # Only apply on push to main branch
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        # with:
        #   terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials for Terraform
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::952257814712:role/GithubActionsRole  # Replace with your role ARN
          aws-region: ${{ env.AWS_REGION }}

      - name: Initialize Terraform
        run: terraform init

      - name: Apply Terraform
        run: terraform apply -auto-approve 